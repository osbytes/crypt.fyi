name: Security Scan
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * *" # Daily scan at midnight UTC

permissions:
  contents: read
  security-events: write # Required for uploading SARIF results
  actions: read

jobs:
  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          scanners: "vuln,secret,config,license" # Enable all scanners
          exit-code: "1"
          ignore-unfixed: false
          hide-progress: false
          list-all-pkgs: true
          github-pat: ${{ secrets.GITHUB_TOKEN }}

          # Additional comprehensive checks
          vuln-type: "os,library"
          timeout: "10m"

      - name: Generate SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "github"
          output: "dependency-results.sbom.json"
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() # Upload results even if previous step fails
        with:
          sarif_file: "trivy-results.sarif"

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sbom-results
          path: dependency-results.sbom.json
          retention-days: 90

      - name: Publish Trivy Scan Summary
        if: always()
        run: |
          echo "### Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "Full results available in Security tab and Artifacts" >> $GITHUB_STEP_SUMMARY
          if [ -f trivy-results.sarif ]; then
            echo "<details><summary>Scan Results</summary>" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat trivy-results.sarif | jq -r '.runs[].results[] | select(.level == "error") | "- " + .message.text' >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi
